plugins {
    id("org.jetbrains.kotlin.multiplatform")
    id("org.jetbrains.kotlin.native.cocoapods")
}
apply plugin: 'com.android.library'

version = "1.0"
def ios_framework_name = "NewsCommon"
def ktor_version = "1.3.2"

kotlin {
    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")   \
                            ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            compilations {
                main.kotlinOptions.freeCompilerArgs = ["-Xobjc-generics"]
            }
            binaries {
                framework("$ios_framework_name") {
                    export project(':helium-core')
                    transitiveExport = true
                    isStatic = false
                    freeCompilerArgs += "-Xobjc-generics"
                }
                sharedLib {
                    // It's possible to export different sets of dependencies to different binaries.
                    export project(':helium-core')
                }
            }
        }

        fromPreset(presets.android, 'android')
    }

    sourceSets {
        // Common
        commonMain {
            dependencies {
                api project(':helium-core')
                implementation("io.ktor:ktor-client-core:$ktor_version")
            }
        }

        // Android
        androidMain {
            dependencies {
                implementation("io.ktor:ktor-client-android:$ktor_version")
            }
        }

        // iOS
        iosMain {
            kotlin {
                srcDir("$projectDir/helium-core/src/iosMain/kotlin")
                srcDir("$projectDir/helium-core/src/commonMain/kotlin")
            }
            dependencies {
                api project(':helium-core')
                implementation("io.ktor:ktor-client-ios:$ktor_version")
            }
        }
    }

    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Common code for multiplatform news app"
        homepage = "https://github.com/joaquimverges/Helium/samples/multiplatform_app/common"

        // The name of the produced framework can be changed.
        // The name of the Gradle project is used here by default.
        frameworkName = "$ios_framework_name"

        pod("helium-core", "0.6.0", project.file("../../helium-core/helium_core.podspec"))
    }
}

android {
    compileSdkVersion compile_sdk
    publishNonDefault true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode project.properties[VERSION_CODE]
        versionName project.properties[VERSION_NAME]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
            java.srcDirs = ['src/androidMain/kotlin']
            res.srcDirs = ['src/androidMain/res']
        }
    }
}